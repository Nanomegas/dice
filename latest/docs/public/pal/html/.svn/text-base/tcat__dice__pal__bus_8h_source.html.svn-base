<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
	<head>
		<title>Platform Abstraction Layer API Documentation</title>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<link href="doxygen.css" rel="stylesheet" type="text/css">
	</head>
	<body>
		<table width="100%" border="0" cellspacing="0" cellpadding="0">
			<tr>
				<td><img src="images/TCAT.gif" width="399" height="64"></td>
				<td align="right">
					<div align="left">
						</div>
				</td>
				<td align="right">
					<div align="right">
						<b><font face="Verdana, Arial, Helvetica, sans-serif"><img src="images/dice_logo.gif" width="120" height="50"></font></b></div>
				</td>
			</tr>
		</table>
		<hr size="1">
	</body>
</html>
<!-- Generated by Doxygen 1.6.3 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="main.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
<h1>tcat_dice_pal_bus.h</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">//==============================================================================</span>
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// This confidential and proprietary software may be used only as authorised</span>
<a name="l00004"></a>00004 <span class="comment">// by a licensing agreement from TC Applied Technologies Ltd.</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// (C) COPYRIGHT 2004 - 2012 TC Applied Technologies Ltd. (ALL RIGHTS RESERVED)</span>
<a name="l00007"></a>00007 <span class="comment">//</span>
<a name="l00008"></a>00008 <span class="comment">// Unauthorized use, duplication or distribution of this software is  </span>
<a name="l00009"></a>00009 <span class="comment">// strictly prohibited by law.</span>
<a name="l00010"></a>00010 <span class="comment">//</span>
<a name="l00011"></a>00011 <span class="comment">// The entire notice above must be reproduced on all authorised copies and</span>
<a name="l00012"></a>00012 <span class="comment">// copies may only be made to the extent permitted by a licensing agreement</span>
<a name="l00013"></a>00013 <span class="comment">// from TC Applied Technologies Ltd.</span>
<a name="l00014"></a>00014 <span class="comment">//</span>
<a name="l00015"></a>00015 <span class="comment">//==============================================================================</span>
<a name="l00016"></a>00016 <span class="comment">//</span>
<a name="l00017"></a>00017 <span class="comment">//  dice pal bus</span>
<a name="l00018"></a>00018 <span class="comment">//</span>
<a name="l00019"></a>00019 <span class="preprocessor">#pragma once</span>
<a name="l00020"></a>00020 <span class="preprocessor"></span>
<a name="l00021"></a>00021 <span class="preprocessor">#include &quot;tcat_dice_pal_device.h&quot;</span>
<a name="l00022"></a>00022 <span class="preprocessor">#include &quot;../TDL/interface/public/TDL_Interface.h&quot;</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 <span class="preprocessor">#define kDriverLog_File_ID      1003</span>
<a name="l00025"></a>00025 <span class="preprocessor"></span>
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <span class="keyword">namespace </span>tcat
<a name="l00028"></a>00028 {
<a name="l00029"></a>00029 <span class="keyword">namespace </span>dice
<a name="l00030"></a>00030 {
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="preprocessor">#define kTCAT_DICE_DRIVER_BUSY_TIMEOUT           5000</span>
<a name="l00034"></a>00034 <span class="preprocessor"></span><span class="preprocessor">#define kTCAT_DICE_DRIVER_OPEN_TIMEOUT          10000</span>
<a name="l00035"></a>00035 <span class="preprocessor"></span><span class="preprocessor">#define kTCAT_DICE_DRIVER_BUSY_RETRY_DELAY        100</span>
<a name="l00036"></a>00036 <span class="preprocessor"></span><span class="preprocessor">#define kTCAT_DICE_FRMW_EXECUTE_RETRY_DELAY        10</span>
<a name="l00037"></a>00037 <span class="preprocessor"></span>
<a name="l00038"></a>00038 <span class="preprocessor">#define kTCAT_DICE_SPEAKER_MAPS                 16</span>
<a name="l00039"></a>00039 <span class="preprocessor"></span>
<a name="l00040"></a>00040 
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 <span class="keyword">class </span>system_impl;
<a name="l00043"></a>00043 
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 
<a name="l00047"></a>00047 <span class="comment">//</span>
<a name="l00048"></a>00048 <span class="comment">//  tcat::dice::bus_impl</span>
<a name="l00049"></a>00049 <span class="comment">//</span>
<a name="l00054"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html">00054</a> <span class="comment"></span><span class="keyword">class </span><a class="code" href="classtcat_1_1dice_1_1bus__impl.html">bus_impl</a>: <span class="keyword">public</span> <a class="code" href="classtcat_1_1dice_1_1base.html">base</a>
<a name="l00055"></a>00055 {
<a name="l00056"></a>00056     <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classtcat_1_1dice_1_1device.html">device</a>;
<a name="l00057"></a>00057     <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classtcat_1_1dice_1_1reference.html" title="Auto reference helper class.">reference</a>&lt;bus_impl&gt;;
<a name="l00058"></a>00058     <span class="keyword">typedef</span> <a class="code" href="classtcat_1_1dice_1_1base.html">base</a> <a class="code" href="classtcat_1_1dice_1_1base.html">super</a>;
<a name="l00059"></a>00059     
<a name="l00060"></a>00060 <span class="keyword">public</span>:
<a name="l00061"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl_1_1channel.html">00061</a>     <span class="keyword">class </span><a class="code" href="classtcat_1_1dice_1_1bus__impl_1_1channel.html" title="bus channel containing name and ac3 information for one audio channel">channel</a>: <span class="keyword">public</span> std::string   
<a name="l00062"></a>00062     {
<a name="l00063"></a>00063     <span class="keyword">public</span>:
<a name="l00064"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl_1_1channel.html#a605c5a8cd4e51532d6ff43b37d82e397">00064</a>                 <a class="code" href="classtcat_1_1dice_1_1bus__impl_1_1channel.html#a605c5a8cd4e51532d6ff43b37d82e397" title="constructor">channel</a>(std::string name, <span class="keywordtype">bool</span> <a class="code" href="classtcat_1_1dice_1_1bus__impl_1_1channel.html#a3efdb3ac34124ddc23bc64aaed085559" title="Return the isoc channel.">ac3_enabled</a>, <span class="keywordtype">bool</span> <a class="code" href="classtcat_1_1dice_1_1bus__impl_1_1channel.html#a3b3d734ada6968cb780a303b556d4342" title="Return AVS sequence number in the isoc channel.">ac3_capable</a>): std::string(name), m_ac3_enabled(ac3_enabled), m_ac3_capable(ac3_capable) {} 
<a name="l00065"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl_1_1channel.html#a3efdb3ac34124ddc23bc64aaed085559">00065</a>         <span class="keywordtype">bool</span>    <a class="code" href="classtcat_1_1dice_1_1bus__impl_1_1channel.html#a3efdb3ac34124ddc23bc64aaed085559" title="Return the isoc channel.">ac3_enabled</a>()<span class="keyword">   const   </span>{ <span class="keywordflow">return</span> m_ac3_enabled; }   
<a name="l00066"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl_1_1channel.html#a3b3d734ada6968cb780a303b556d4342">00066</a>         <span class="keywordtype">bool</span>    <a class="code" href="classtcat_1_1dice_1_1bus__impl_1_1channel.html#a3b3d734ada6968cb780a303b556d4342" title="Return AVS sequence number in the isoc channel.">ac3_capable</a>()<span class="keyword">   const   </span>{ <span class="keywordflow">return</span> m_ac3_capable; }   
<a name="l00067"></a>00067     <span class="keyword">private</span>:
<a name="l00068"></a>00068         <span class="comment">//\cond</span>
<a name="l00069"></a>00069         <span class="keywordtype">bool</span>    m_ac3_enabled;
<a name="l00070"></a>00070         <span class="keywordtype">bool</span>    m_ac3_capable;
<a name="l00071"></a>00071         <span class="comment">//\endcond</span>
<a name="l00072"></a>00072     };
<a name="l00073"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ac66e50ffd444396bf61b17e09259f84f">00073</a>     <span class="keyword">typedef</span> std::deque&lt;channel&gt; <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ac66e50ffd444396bf61b17e09259f84f" title="Internal channel representation class.">channel_list</a>;       
<a name="l00074"></a>00074 <span class="preprocessor">#ifdef WIN32</span>
<a name="l00075"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#afa72ebc2b0cd6d772a810a1c2596eace">00075</a> <span class="preprocessor"></span>    <span class="keyword">typedef</span> std::string <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#afa72ebc2b0cd6d772a810a1c2596eace" title="(WDM:) bus ID">ID</a>;                                                                                                             
<a name="l00076"></a>00076 <span class="preprocessor">    #define kTCAT_DICE_BUS_ID_NONE &quot;&quot; </span>
<a name="l00077"></a>00077 <span class="preprocessor"></span><span class="preprocessor">#endif//WIN32</span>
<a name="l00078"></a>00078 <span class="preprocessor"></span><span class="preprocessor">#ifdef __MACH__</span>
<a name="l00079"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ad28ca89e20d9e392c6d815d12d714d92">00079</a> <span class="preprocessor"></span>    <span class="keyword">typedef</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#afa72ebc2b0cd6d772a810a1c2596eace" title="(WDM:) bus ID">ID</a>;                                                                                                            
<a name="l00080"></a>00080 <span class="preprocessor">    #define kTCAT_DICE_BUS_ID_NONE 0 </span>
<a name="l00081"></a>00081 <span class="preprocessor"></span><span class="preprocessor">#endif//__MACH__</span>
<a name="l00082"></a>00082 <span class="preprocessor"></span>    
<a name="l00083"></a>00083     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ac2e34c7bdafd1ba1f16b2e8cd6d0d022" title="Second stage critical bus creation.">create</a>      (<a class="code" href="classtcat_1_1dice_1_1system__impl.html" title="Platform dependent system implementation.">system_impl</a>* <a class="code" href="classtcat_1_1dice_1_1system.html" title="Application wide singleton acts as the STL device tree root.">system</a>, <span class="keyword">const</span> <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#afa72ebc2b0cd6d772a810a1c2596eace" title="(WDM:) bus ID">ID</a> <span class="keywordtype">id</span>)      <span class="keywordflow">throw</span>(<a class="code" href="classtcat_1_1exception_1_1base.html">tcat::exception::base</a>);               
<a name="l00084"></a>00084     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#afe516a6abb5c3f0b266ab85237237f83" title="Opens the DICE(tm) driver.">open</a>()                                              throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::<a class="code" href="classtcat_1_1dice_1_1base.html">base</a>);               
<a name="l00085"></a>00085                     <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a4f1d2f553f4caac7db777703fe73146b" title="Closes the DICE(tm) driver.">close</a>()                                             throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::base);               
<a name="l00086"></a>00086     
<a name="l00087"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa412a7ec9c47cbace9bbe0e706854749">00087</a>     virtual         uint32              <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa412a7ec9c47cbace9bbe0e706854749" title="Returns the 32bit integer driver version.">driver_version</a>()<span class="keyword">                            const       </span>{ <span class="keywordflow">return</span> m_driver_version; }            
<a name="l00088"></a>00088 <span class="comment">//  virtual const   std::string         name()                                      const       { return std::string(&quot;&quot;); } </span>
<a name="l00089"></a>00089     <span class="keyword">virtual</span>         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ae688008ec49a47211061e1221b8c5257" title="Sorts the device into the STL list.">add</a>         (<a class="code" href="structtcat_1_1dice_1_1_d_e_v_i_c_e___i_n_f_o.html">DEVICE_INFO</a>&amp; device_info)              <span class="keywordflow">throw</span>(<a class="code" href="classtcat_1_1exception_1_1base.html">tcat::exception::base</a>)=0;             
<a name="l00090"></a>00090     <span class="keyword">virtual</span>         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a34c037cfb9537165ae579972618a864c" title="Return true if the guid is a connected DICE(tm) device.">available</a>   (uint64 guid64)                         <span class="keywordflow">throw</span>(<a class="code" href="classtcat_1_1exception_1_1base.html">tcat::exception::base</a>);               
<a name="l00091"></a>00091 
<a name="l00092"></a>00092     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aaff1a11db46ba2ba70e9aec53dd3c511" title="Waits for the bus-is-ready semaphore.">ready_wait</a>()                                        throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::<a class="code" href="classtcat_1_1dice_1_1base.html">base</a>);               
<a name="l00093"></a>00093     virtual         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a3e7d22e7b4059fb4bdf24b65b89d4449" title="Signals the bus-is-ready semaphore.">ready_set</a>()                                         throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::base);               
<a name="l00094"></a>00094     virtual         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a3cff86b0ee4cc5cdd5967eee7155827e" title="Resets the bus-is-ready semaphore.">ready_reset</a>()                                       throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::base);               
<a name="l00095"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a821753dd954b76e37c138e1cfa2dc71e">00095</a>     virtual const   <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#afa72ebc2b0cd6d772a810a1c2596eace" title="(WDM:) bus ID">ID</a>&amp;                 <span class="keywordtype">id</span>()<span class="keyword">                                        const       </span>{ <span class="keywordflow">return</span> m_id; }                        
<a name="l00096"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a7f7ab03249feacb0a9ffc6c428e3ef8d">00096</a>     <span class="keyword">virtual</span>         uint32              <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a7f7ab03249feacb0a9ffc6c428e3ef8d" title="Returns the total number of audio clients - used to know about streaming parameter...">clients</a>()<span class="keyword">                                   const       </span>{ <span class="keywordflow">return</span> m_cache[0].clients; }          
<a name="l00097"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a6c56bc283cd90c845c8176815eede9ce">00097</a>     <span class="keyword">virtual</span>         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a6c56bc283cd90c845c8176815eede9ce" title="is the sample rate parameter currently changeable">rate_readonly</a>()<span class="keyword">                             const       </span>{ <span class="keywordflow">return</span> m_cache[0].rate_readonly; }        
<a name="l00098"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a200cbf8558584b2f6654aa430782364b">00098</a>     <span class="keyword">virtual</span>         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a200cbf8558584b2f6654aa430782364b" title="is the sync source parameter currently changeable">sync_readonly</a>()<span class="keyword">                             const       </span>{ <span class="keywordflow">return</span> m_cache[0].sync_readonly; }        
<a name="l00099"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#af8873f9c441d16f797f505d8f001b8e5">00099</a>     <span class="keyword">virtual</span>         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#af8873f9c441d16f797f505d8f001b8e5" title="is the master parameter currently changeable">master_readonly</a>()<span class="keyword">                           const       </span>{ <span class="keywordflow">return</span> m_cache[0].master_readonly; }      
<a name="l00100"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a19b731c54b1d6be816579a47a31e9ec3">00100</a>     <span class="keyword">virtual</span>         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a19b731c54b1d6be816579a47a31e9ec3" title="is the operation mode parameter currently changeable">op_mode_readonly</a>()<span class="keyword">                          const       </span>{ <span class="keywordflow">return</span> m_cache[0].op_mode_readonly; }     
<a name="l00101"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa2f438b2f860a086303192b264ef4ea1">00101</a>     <span class="keyword">virtual</span>         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa2f438b2f860a086303192b264ef4ea1" title="(Windows only) is the buffer size parameter currently changeable">io_size_readonly</a>()<span class="keyword">                          const       </span>{ <span class="keywordflow">return</span> m_cache[0].io_size_readonly; }     
<a name="l00102"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a47061af4bce1879b572ba98ae688f59f">00102</a>     <span class="keyword">virtual</span>         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a47061af4bce1879b572ba98ae688f59f" title="is the nickname parameter currently changeable">nickname_readonly</a>()<span class="keyword">                         const       </span>{ <span class="keywordflow">return</span> m_cache[0].nickname_readonly; }    
<a name="l00103"></a>00103 <span class="preprocessor">#ifndef TCAT_DICE_AVC</span>
<a name="l00104"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ae8ce88bb65da420db5865ab8bba817e6">00104</a> <span class="preprocessor"></span>    <span class="keyword">virtual</span> <span class="keyword">const</span>   CLOCK&amp;              <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ae8ce88bb65da420db5865ab8bba817e6" title="Returns the current CLOCK enum (sample rate).">clock</a>()<span class="keyword">                                     const       </span>{ <span class="keywordflow">return</span> m_cache[0].config.clock; }     
<a name="l00105"></a>00105     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ae8ce88bb65da420db5865ab8bba817e6" title="Returns the current CLOCK enum (sample rate).">clock</a>       (CLOCK <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ae8ce88bb65da420db5865ab8bba817e6" title="Returns the current CLOCK enum (sample rate).">clock</a>)                           <span class="keywordflow">throw</span>(<a class="code" href="classtcat_1_1exception_1_1base.html">tcat::exception::base</a>);               
<a name="l00106"></a>00106     <span class="keyword">virtual</span> <span class="keyword">const</span>   std::string         <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a99682f1b04cc20a7373c100776c3a00a" title="Transforms the CLOCK enum into a human readable std::string.">clock_name</a>  (CLOCK <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ae8ce88bb65da420db5865ab8bba817e6" title="Returns the current CLOCK enum (sample rate).">clock</a>)                   <span class="keyword">const</span>;
<a name="l00108"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a116d3145be50a3137a9e53a12071b515">00108</a>     <span class="keyword">virtual</span> <span class="keyword">const</span>   CLOCK_CAPS&amp;         <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a116d3145be50a3137a9e53a12071b515" title="Returns the clock capabilities of the master device.">clock_caps</a>()<span class="keyword">                                const       </span>{ <span class="keywordflow">return</span> m_cache[0].config.clock_caps; }
<a name="l00109"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a7bdb6680e04159a899f12527c9e2c063">00109</a>     <span class="keyword">virtual</span> <span class="keyword">const</span>   SYNC&amp;               <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a7bdb6680e04159a899f12527c9e2c063" title="Returns the sync source of the master device.">sync</a>()<span class="keyword">                                      const       </span>{ <span class="keywordflow">return</span> m_cache[0].config.sync; }      
<a name="l00110"></a>00110     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a7bdb6680e04159a899f12527c9e2c063" title="Returns the sync source of the master device.">sync</a>        (SYNC <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a7bdb6680e04159a899f12527c9e2c063" title="Returns the sync source of the master device.">sync</a>)                             <span class="keywordflow">throw</span>(<a class="code" href="classtcat_1_1exception_1_1base.html">tcat::exception::base</a>);               
<a name="l00111"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a40809a04a7d48d7f1902f678cda39677">00111</a>     <span class="keyword">virtual</span> <span class="keyword">const</span>   std::string         <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a40809a04a7d48d7f1902f678cda39677" title="Transforms the SYNC source enum into a human readable std::string provided by the...">sync_name</a>   (SYNC <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a7bdb6680e04159a899f12527c9e2c063" title="Returns the sync source of the master device.">sync</a>)<span class="keyword">                     const       </span>{ <span class="keywordflow">return</span> std::string(m_cache[0].config.syncname[sync]); }
<a name="l00113"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a26e0e32b328fe6de8c1fa60dad9a4450">00113</a>     <span class="keyword">virtual</span> <span class="keyword">const</span>   SYNC_CAPS&amp;          <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a26e0e32b328fe6de8c1fa60dad9a4450" title="Returns the possible sync sources of the master device.">sync_caps</a>()<span class="keyword">                                 const       </span>{ <span class="keywordflow">return</span> m_cache[0].config.sync_caps; } 
<a name="l00114"></a>00114     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a5ef74ac9e0775bd495c7cd241f3b6e91" title="IOCTL Driver communication interface.">ioctl</a>       (uint32 ctrl, <span class="keyword">const</span> <span class="keywordtype">void</span>* in, uint32 in_size = <span class="keyword">sizeof</span>(uint32), <span class="keywordtype">void</span>* out = NULL, uint32 out_size = 0)   
<a name="l00115"></a>00115                                                                                             throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::<a class="code" href="classtcat_1_1dice_1_1base.html">base</a>);               
<a name="l00116"></a>00116 <span class="preprocessor">#ifdef WIN32</span>
<a name="l00117"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a98a3a038eab353858cd4ea9490510b2a">00117</a> <span class="preprocessor"></span>    <span class="keyword">virtual</span> <span class="keyword">const</span>   uint32              <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a98a3a038eab353858cd4ea9490510b2a" title="(Windows only) Returns the I/O buffer size">io_size</a>()<span class="keyword">                                   const       </span>{ <span class="keywordflow">return</span> m_cache[0].config.io_size; }   
<a name="l00118"></a>00118     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a98a3a038eab353858cd4ea9490510b2a" title="(Windows only) Returns the I/O buffer size">io_size</a>     (uint32 <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a98a3a038eab353858cd4ea9490510b2a" title="(Windows only) Returns the I/O buffer size">io_size</a>)                        <span class="keywordflow">throw</span>(<a class="code" href="classtcat_1_1exception_1_1base.html">tcat::exception::base</a>);               
<a name="l00119"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a9049ba90c6d946b0badd89254941aca3">00119</a>     <span class="keyword">virtual</span> <span class="keyword">const</span>   uint32              <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a9049ba90c6d946b0badd89254941aca3" title="(Windows only) Returns the minimum I/O buffer size">min_io_size</a>()<span class="keyword">                               const       </span>{ <span class="keywordflow">return</span> m_cache[0].min_io_size; }      
<a name="l00120"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aae33a03430d704feba01f67f6e6f478d">00120</a>     <span class="keyword">virtual</span> <span class="keyword">const</span>   uint32              <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aae33a03430d704feba01f67f6e6f478d" title="(Windows only) Returns the maximum I/O buffer size">max_io_size</a>()<span class="keyword">                               const       </span>{ <span class="keywordflow">return</span> m_cache[0].max_io_size; }      
<a name="l00121"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a71554ae44fa6282b525bc3e965984ea1">00121</a>     <span class="keyword">virtual</span>         uint32              <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a71554ae44fa6282b525bc3e965984ea1" title="(Windows only) Returns In(false) or Out(true) speaker config">speaker</a>()<span class="keyword">                                   const       </span>{ <span class="keywordflow">return</span> m_cache[0].speaker[1].cfg; }           
<a name="l00122"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ad46555b99aa22436dce885c305a05266">00122</a>     <span class="keyword">virtual</span>         <span class="keywordtype">int</span>                 <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ad46555b99aa22436dce885c305a05266" title="(Windows only) Returns In(false) or Out(true) channel for speaker">speaker_map</a> (<span class="keywordtype">bool</span> out, uint32 <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a71554ae44fa6282b525bc3e965984ea1" title="(Windows only) Returns In(false) or Out(true) speaker config">speaker</a>)<span class="keyword">      const       </span>{ <span class="keywordflow">return</span> m_cache[0].speaker[out].map[speaker];}
<a name="l00123"></a>00123     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ad46555b99aa22436dce885c305a05266" title="(Windows only) Returns In(false) or Out(true) channel for speaker">speaker_map</a> (<span class="keywordtype">bool</span> out, uint32 <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a71554ae44fa6282b525bc3e965984ea1" title="(Windows only) Returns In(false) or Out(true) speaker config">speaker</a>, uint32 channel)  <span class="keywordflow">throw</span>(<a class="code" href="classtcat_1_1exception_1_1base.html">tcat::exception::base</a>);           
<a name="l00124"></a>00124                     <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a065c36920047bd6e6a934b53700a183c" title="Returns driver DPC latency statistics.">dpc_stats</a>( ioctl::BUS_DPC_STATS&amp; stats )    <span class="keyword">const</span>   <span class="keywordflow">throw</span>(<a class="code" href="classtcat_1_1exception_1_1base.html">tcat::exception::base</a>);               
<a name="l00125"></a>00125                     <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a9f6ab27273373dcd0c886f128a671568" title="Clears driver DPC latency statistics.">dpc_stats_clear</a>()                           <span class="keyword">const</span>   throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::base);               
<a name="l00126"></a>00126 <span class="preprocessor">#endif//WIN32</span>
<a name="l00127"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aae6ec26bbf6008377b78cf16e41bfb65">00127</a> <span class="preprocessor"></span>    <span class="keyword">virtual</span> <span class="keyword">const</span>   OP_MODE             <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aae6ec26bbf6008377b78cf16e41bfb65" title="Returns the driver op mode (additional kernel buffer safe mode).">op_mode</a>()<span class="keyword">                                   const       </span>{ <span class="keywordflow">return</span> m_cache[0].op_mode; }          
<a name="l00128"></a>00128     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aae6ec26bbf6008377b78cf16e41bfb65" title="Returns the driver op mode (additional kernel buffer safe mode).">op_mode</a>     (OP_MODE <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aae6ec26bbf6008377b78cf16e41bfb65" title="Returns the driver op mode (additional kernel buffer safe mode).">op_mode</a>)                       <span class="keywordflow">throw</span>(<a class="code" href="classtcat_1_1exception_1_1base.html">tcat::exception::base</a>);               
<a name="l00129"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ad71d608538a24af0503e71a954ba9613">00129</a>     <span class="keyword">virtual</span> <span class="keyword">const</span>   uint64&amp;             <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ad71d608538a24af0503e71a954ba9613" title="Returns the clock master device.">master</a>()<span class="keyword">                                    const       </span>{ <span class="keywordflow">return</span> m_cache[0].config.master_guid64; } 
<a name="l00130"></a>00130     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ad71d608538a24af0503e71a954ba9613" title="Returns the clock master device.">master</a>      (uint64 guid64)                         <span class="keywordflow">throw</span>(<a class="code" href="classtcat_1_1exception_1_1base.html">tcat::exception::base</a>);               
<a name="l00131"></a>00131     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#acd8a8c3a364635b134a8d8ed98f149e9" title="Allows for increasing the driver&amp;#39;s reported audio latency.">add_reported_audio_latency</a>(uint32 inputSamples, uint32 outputSamples)   <span class="keywordflow">throw</span>(<a class="code" href="classtcat_1_1exception_1_1base.html">tcat::exception::base</a>);   
<a name="l00132"></a>00132                     ioctl::BUS_ERROR    <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a688d29316e91bd356b84e2894d6818af" title="Returns driver streaming error counters.">errors</a>()                                    <span class="keyword">const</span>   throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::base);               
<a name="l00133"></a>00133                     <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#acf68f48604c2acd36db1e5446986c44d" title="Clears driver streaming error counters.">error_clear</a>()                               const   throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::base);               
<a name="l00134"></a>00134 <span class="preprocessor">#endif//TCAT_DICE_AVC</span>
<a name="l00135"></a>00135 <span class="preprocessor"></span>
<a name="l00136"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7">00136</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>(<span class="keyword">const</span> <a class="code" href="classtcat_1_1exception_1_1base.html">tcat::exception::base</a>&amp; <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>)       {}                                      
<a name="l00137"></a>00137     
<a name="l00138"></a>00138     <span class="keyword">virtual</span>         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ac70dfc9c917f9954ce99bda1ec64b398" title="Notifies about bus configuration changes.">update</a>();                                                                                       
<a name="l00139"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa10d5ba013e29a06a2111d6f496ac241">00139</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa10d5ba013e29a06a2111d6f496ac241" title="Sends device notifications to the list of devices.">update_devices</a>()                                        {}                                      
<a name="l00140"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aad2c9e7d395b69a43474d9ab8acb29fc">00140</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aad2c9e7d395b69a43474d9ab8acb29fc" title="Notifies about device arrival/removal and updates the internal STL list.">update_devicelist</a>()                                     {}                                      
<a name="l00141"></a>00141     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aaf6e3268ef8b478ab28dcc3d5e7329a9" title="Caches the bus configuration.">fetch</a>()                                             throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::base);               
<a name="l00142"></a>00142     virtual         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aaaa6ec0384122a3aa12855545187f13a" title="Sends device notifications to the list of devices.">fetch_devices</a>()                                     throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::base) = 0;           
<a name="l00143"></a>00143     virtual         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a5c8260e54e033225f21a757865e4cc6d" title="Sends device notifications to the list of devices.">fetch_devicelist</a>()                                  throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::base);               
<a name="l00144"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ad932e5b6376f58995a0fc4739d61389f">00144</a>     virtual         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ad932e5b6376f58995a0fc4739d61389f" title="Sets the timeout in milliseconds for driver operation.">timeout</a> (uint32 <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ad932e5b6376f58995a0fc4739d61389f" title="Sets the timeout in milliseconds for driver operation.">timeout</a>=kTCAT_DICE_DRIVER_BUSY_TIMEOUT) { m_timeout=<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ad932e5b6376f58995a0fc4739d61389f" title="Sets the timeout in milliseconds for driver operation.">timeout</a>; }                  
<a name="l00145"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a9514692aed30dd80b3c13ac67b910be8">00145</a>     <span class="keyword">virtual</span>         <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ac66e50ffd444396bf61b17e09259f84f" title="Internal channel representation class.">channel_list</a>&amp;       <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a9514692aed30dd80b3c13ac67b910be8" title="Returns In(false) or Out(true) channels.">channels</a>    (<span class="keywordtype">bool</span> out)                                  { <span class="keywordflow">return</span> m_cache[0].channels[out]; }    
<a name="l00146"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a1892d0988b06dcb505b990fd3fab7537">00146</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a1892d0988b06dcb505b990fd3fab7537" title="Called whenever a time consuming process is making any progress.">progress</a>    (uint32 percent, uint32 ctrl)<span class="keyword">   const       </span>{}                                      
<a name="l00147"></a>00147 
<a name="l00148"></a>00148 <span class="keyword">protected</span>:
<a name="l00149"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a0ca671156e366ecaf7f9c23ce41c9e47">00149</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a0ca671156e366ecaf7f9c23ce41c9e47" title="Informs about clients() (number of driver clients) changes - used to know about streaming...">update_clients</a>()                                        {}                                      
<a name="l00150"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ae935ed631bdc919a12b22977b2fe0740">00150</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ae935ed631bdc919a12b22977b2fe0740" title="Notification that the sample rate restriction has changed.">update_rate_readonly</a>()                                  {}                                      
<a name="l00151"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a1f90f07242febd720258c0bfa7298db6">00151</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a1f90f07242febd720258c0bfa7298db6" title="Notification that the sync source restriction has changed.">update_sync_readonly</a>()                                  {}                                      
<a name="l00152"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a159bb70c422551084ce5e7f4f77f0191">00152</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a159bb70c422551084ce5e7f4f77f0191" title="Notification that the master restriction has changed.">update_master_readonly</a>()                                {}                                      
<a name="l00153"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a037473fe90c06652832bd9cbb872bd3a">00153</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a037473fe90c06652832bd9cbb872bd3a" title="Notification that the operation mode restriction has changed.">update_op_mode_readonly</a>()                               {}                                      
<a name="l00154"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ab738346d0d6d1f9d0d433f99e3918cd4">00154</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ab738346d0d6d1f9d0d433f99e3918cd4" title="(Windows only) Notification that the buffer size restriction has changed">update_io_size_readonly</a>()                               {}                                      
<a name="l00155"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a3adb4d47adba5c4deccd216f85f1a4a8">00155</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a3adb4d47adba5c4deccd216f85f1a4a8" title="Notification that the nickname restriction has changed.">update_nickname_readonly</a>()                              {}                                      
<a name="l00156"></a>00156 <span class="preprocessor">#ifndef TCAT_DICE_AVC</span>
<a name="l00157"></a>00157 <span class="preprocessor"></span>    <span class="keyword">virtual</span> <a class="code" href="structtcat_1_1dice_1_1_d_e_v_i_c_e___n_o_t_i_f_i_c_a_t_i_o_n_s.html">DEVICE_NOTIFICATIONS</a>        <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa8b2476e548cfd9691a9028c811ef8f2" title="Obtains the notification flags for all devices.">device_notifications</a>()                              throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::base);               
<a name="l00158"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a6aaf893286dbce64d49bf5a370cdd5dc">00158</a>     virtual         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a6aaf893286dbce64d49bf5a370cdd5dc" title="Informs about clock() (sample rate) changes.">update_clock</a>()                                          {}                                      
<a name="l00159"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a614c37a07996655b24c41c518a8e492a">00159</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a614c37a07996655b24c41c518a8e492a" title="Informs about clock_caps() (sample rate capabilities) changes.">update_clock_caps</a>()                                     {}                                      
<a name="l00160"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a8d50fdcf2f0168890da529b5cda4f8f8">00160</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a8d50fdcf2f0168890da529b5cda4f8f8" title="Informs about sync() (clock source) changes.">update_sync</a>()                                           {}                                      
<a name="l00161"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aebdbde5d0024112c644240c4bb2c7ac4">00161</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aebdbde5d0024112c644240c4bb2c7ac4" title="Informs about sync_name() changes.">update_sync_names</a>()                                     {}                                      
<a name="l00162"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a37df4886718abbde0d1f4780c2a016e3">00162</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a37df4886718abbde0d1f4780c2a016e3" title="Informs about sync_caps() (clock source) changes.">update_sync_caps</a>()                                      {}                                      
<a name="l00163"></a>00163 <span class="preprocessor">#ifdef WIN32</span>
<a name="l00164"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ae567d7d62a7dae3242b5c4672680a594">00164</a> <span class="preprocessor"></span>    <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ae567d7d62a7dae3242b5c4672680a594" title="(Windows only) Informs about io_size() I/O buffer size changes">update_io_size</a>()                                        {}                                      
<a name="l00165"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#acbd62dc3ae272c40c364cffb496b79d0">00165</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#acbd62dc3ae272c40c364cffb496b79d0" title="(Windows only) Informs about min_io_size() minimum allowed I/O buffer size changes...">update_min_io_size</a>()                                    {}                                      
<a name="l00166"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#acee2444772bd4f5677a23b507d85eeb1">00166</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#acee2444772bd4f5677a23b507d85eeb1" title="(Windows only) Informs about max_io_size() maximum allowed I/O buffer size changes...">update_max_io_size</a>()                                    {}                                      
<a name="l00167"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ab58b61d73f9c3ac7078e65d7c41c950a">00167</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ab58b61d73f9c3ac7078e65d7c41c950a" title="(Windows only) Informs about speaker In(false) or Out(true) setup changes">update_speaker</a>()                                        {}                                      
<a name="l00168"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a32f618025ee02f00b4d6b5805d9e37b7">00168</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a32f618025ee02f00b4d6b5805d9e37b7" title="(Windows only) Informs about speaker_map In(false) or Out(true) changes">update_speaker_map</a>(<span class="keywordtype">bool</span> out, uint32 <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a71554ae44fa6282b525bc3e965984ea1" title="(Windows only) Returns In(false) or Out(true) speaker config">speaker</a>)            {}                                      
<a name="l00169"></a>00169 <span class="preprocessor">#endif//WIN32</span>
<a name="l00170"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a6907c53215e0101068846826c20d328f">00170</a> <span class="preprocessor"></span>    <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a6907c53215e0101068846826c20d328f" title="Informs about a new clock master() device.">update_master</a>()                                         {}                                      
<a name="l00171"></a><a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a27217735b9c69de7fc558759bb5d75dd">00171</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a27217735b9c69de7fc558759bb5d75dd" title="Informs about op_mode() changes.">update_op_mode</a>()                                        {}                                      
<a name="l00172"></a>00172 <span class="preprocessor">#endif//TCAT_DICE_AVC</span>
<a name="l00173"></a>00173 <span class="preprocessor"></span>                                        <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ac469f91d1886557b448188869899d9c1" title="First stage bus constructor.">bus_impl</a>()                                          throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::base);               
<a name="l00174"></a>00174     virtual                             ~bus_impl();                                                                                    
<a name="l00175"></a>00175 
<a name="l00176"></a>00176 private:
<a name="l00177"></a>00177 
<a name="l00178"></a>00178 <span class="preprocessor">#ifdef __MACH__</span>
<a name="l00179"></a>00179 <span class="preprocessor"></span><span class="comment">//\cond</span>
<a name="l00180"></a>00180     <span class="keyword">static</span>          <span class="keywordtype">void</span>                bus_callback_notification_arrival_removal( <span class="keywordtype">void</span> *refcon, <span class="keywordtype">int</span> result, <span class="keywordtype">void</span> **args, uint32_t numArgs );
<a name="l00181"></a>00181     <span class="keyword">static</span>          <span class="keywordtype">void</span>                bus_callback_notification_bus_reset( <span class="keywordtype">void</span> *refcon, <span class="keywordtype">int</span> result, <span class="keywordtype">void</span> **args, uint32_t numArgs );
<a name="l00182"></a>00182     <span class="keyword">static</span>          <span class="keywordtype">void</span>                bus_callback_notification_interface_ready( <span class="keywordtype">void</span> *refcon, <span class="keywordtype">int</span> result, <span class="keywordtype">void</span> **args, uint32_t numArgs );
<a name="l00183"></a>00183     <span class="keyword">static</span>          <span class="keywordtype">void</span>                bus_callback_notification_config( <span class="keywordtype">void</span> *refcon, <span class="keywordtype">int</span> result, <span class="keywordtype">void</span> **args, uint32_t numArgs );
<a name="l00184"></a>00184     <span class="keyword">static</span>          <span class="keywordtype">void</span>                bus_callback_notification_device( <span class="keywordtype">void</span> *refcon, <span class="keywordtype">int</span> result, <span class="keywordtype">void</span> **args, uint32_t numArgs );
<a name="l00185"></a>00185 
<a name="l00186"></a>00186                     <span class="keyword">enum</span> 
<a name="l00187"></a>00187                     {
<a name="l00188"></a>00188                         kMaxBusNoticationRefCons = 8,
<a name="l00189"></a>00189                         kInvalidRefConIndex = kMaxBusNoticationRefCons,
<a name="l00190"></a>00190                     };
<a name="l00191"></a>00191                     <span class="keyword">typedef</span> <span class="keyword">struct</span>
<a name="l00192"></a>00192                     {
<a name="l00193"></a>00193                         bus_impl*   busImplPtr;
<a name="l00194"></a>00194                         uint16      generationCount;
<a name="l00195"></a>00195                     } notification_refcon;
<a name="l00196"></a>00196                     <span class="keyword">class </span>notification_lock: <span class="keyword">public</span> base
<a name="l00197"></a>00197                     {
<a name="l00198"></a>00198                     };
<a name="l00199"></a>00199     <span class="keyword">static</span>          notification_lock       s_NotificationRefConsLock;
<a name="l00200"></a>00200     <span class="keyword">static</span>          notification_refcon     s_NotificationRefCons[kMaxBusNoticationRefCons];
<a name="l00201"></a>00201     <span class="keyword">static</span>          uint16                  s_NotificationRefConsGenerationCount;
<a name="l00202"></a>00202 <span class="comment">//\endcond</span>
<a name="l00203"></a>00203 <span class="preprocessor">#endif//__MACH__</span>
<a name="l00204"></a>00204 <span class="preprocessor"></span>
<a name="l00205"></a>00205 <span class="keyword">protected</span>:
<a name="l00206"></a>00206 <span class="comment">//\cond</span>
<a name="l00207"></a>00207                     <span class="keyword">enum</span> 
<a name="l00208"></a>00208                     {
<a name="l00209"></a>00209                         kProgressOpen = 0x8000000,
<a name="l00210"></a>00210                     };
<a name="l00211"></a>00211                     uint32              m_timeout;                                                                                      
<a name="l00212"></a>00212                     uint32              m_driver_version;                                                                               
<a name="l00213"></a>00213                     <span class="keyword">class </span>cache 
<a name="l00214"></a>00214                     {
<a name="l00215"></a>00215                     <span class="keyword">public</span>:
<a name="l00216"></a>00216                         cache(): 
<a name="l00217"></a>00217                             <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a7f7ab03249feacb0a9ffc6c428e3ef8d" title="Returns the total number of audio clients - used to know about streaming parameter...">clients</a>(0), 
<a name="l00218"></a>00218                             <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a6c56bc283cd90c845c8176815eede9ce" title="is the sample rate parameter currently changeable">rate_readonly</a>(false), 
<a name="l00219"></a>00219                             <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a200cbf8558584b2f6654aa430782364b" title="is the sync source parameter currently changeable">sync_readonly</a>(false), 
<a name="l00220"></a>00220                             <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#af8873f9c441d16f797f505d8f001b8e5" title="is the master parameter currently changeable">master_readonly</a>(false),
<a name="l00221"></a>00221                             <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a19b731c54b1d6be816579a47a31e9ec3" title="is the operation mode parameter currently changeable">op_mode_readonly</a>(false),
<a name="l00222"></a>00222                             <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa2f438b2f860a086303192b264ef4ea1" title="(Windows only) is the buffer size parameter currently changeable">io_size_readonly</a>(false),
<a name="l00223"></a>00223                             <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a47061af4bce1879b572ba98ae688f59f" title="is the nickname parameter currently changeable">nickname_readonly</a>(false)
<a name="l00224"></a>00224                         {
<a name="l00225"></a>00225 <span class="preprocessor">                            #ifndef TCAT_DICE_AVC</span>
<a name="l00226"></a>00226 <span class="preprocessor"></span>                            memset (&amp;config, 0xff, <span class="keyword">sizeof</span> config);
<a name="l00227"></a>00227                             memset (&amp;<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aae6ec26bbf6008377b78cf16e41bfb65" title="Returns the driver op mode (additional kernel buffer safe mode).">op_mode</a>, 0xff, <span class="keyword">sizeof</span> <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aae6ec26bbf6008377b78cf16e41bfb65" title="Returns the driver op mode (additional kernel buffer safe mode).">op_mode</a>);
<a name="l00228"></a>00228 <span class="preprocessor">                            #ifdef WIN32</span>
<a name="l00229"></a>00229 <span class="preprocessor"></span>                            memset (&amp;<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a71554ae44fa6282b525bc3e965984ea1" title="(Windows only) Returns In(false) or Out(true) speaker config">speaker</a>, 0xff, <span class="keyword">sizeof</span> <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a71554ae44fa6282b525bc3e965984ea1" title="(Windows only) Returns In(false) or Out(true) speaker config">speaker</a>);
<a name="l00230"></a>00230 <span class="preprocessor">                            #endif//WIN32</span>
<a name="l00231"></a>00231 <span class="preprocessor"></span><span class="preprocessor">                            #endif//TCAT_DICE_AVC</span>
<a name="l00232"></a>00232 <span class="preprocessor"></span>                        }
<a name="l00233"></a>00233 
<a name="l00234"></a>00234                         <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#ac66e50ffd444396bf61b17e09259f84f" title="Internal channel representation class.">channel_list</a>        <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a9514692aed30dd80b3c13ac67b910be8" title="Returns In(false) or Out(true) channels.">channels</a>[2];
<a name="l00235"></a>00235                         uint32              <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a7f7ab03249feacb0a9ffc6c428e3ef8d" title="Returns the total number of audio clients - used to know about streaming parameter...">clients</a>;
<a name="l00236"></a>00236                         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a6c56bc283cd90c845c8176815eede9ce" title="is the sample rate parameter currently changeable">rate_readonly</a>;
<a name="l00237"></a>00237                         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a200cbf8558584b2f6654aa430782364b" title="is the sync source parameter currently changeable">sync_readonly</a>;
<a name="l00238"></a>00238                         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#af8873f9c441d16f797f505d8f001b8e5" title="is the master parameter currently changeable">master_readonly</a>;
<a name="l00239"></a>00239                         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a19b731c54b1d6be816579a47a31e9ec3" title="is the operation mode parameter currently changeable">op_mode_readonly</a>;
<a name="l00240"></a>00240                         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa2f438b2f860a086303192b264ef4ea1" title="(Windows only) is the buffer size parameter currently changeable">io_size_readonly</a>;
<a name="l00241"></a>00241                         <span class="keywordtype">bool</span>                <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a47061af4bce1879b572ba98ae688f59f" title="is the nickname parameter currently changeable">nickname_readonly</a>;
<a name="l00242"></a>00242 <span class="preprocessor">                        #ifndef TCAT_DICE_AVC</span>
<a name="l00243"></a>00243 <span class="preprocessor"></span>                        ioctl::BUS_CONFIG   config;                                                                                     
<a name="l00244"></a>00244                         OP_MODE             <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aae6ec26bbf6008377b78cf16e41bfb65" title="Returns the driver op mode (additional kernel buffer safe mode).">op_mode</a>;
<a name="l00245"></a>00245 <span class="preprocessor">                        #ifdef WIN32                                                                                        ///&lt; (WDM) WDM audio enabled or disabled</span>
<a name="l00246"></a>00246 <span class="preprocessor"></span>                        <span class="keyword">struct </span>SPEAKER_CONFIG
<a name="l00247"></a>00247                         {
<a name="l00248"></a>00248                             uint32  cfg;
<a name="l00249"></a>00249                             <span class="keywordtype">int</span> map[kTCAT_DICE_SPEAKER_MAPS];
<a name="l00250"></a>00250                         } <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a71554ae44fa6282b525bc3e965984ea1" title="(Windows only) Returns In(false) or Out(true) speaker config">speaker</a>[2];
<a name="l00251"></a>00251                         uint32              <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a9049ba90c6d946b0badd89254941aca3" title="(Windows only) Returns the minimum I/O buffer size">min_io_size</a>;
<a name="l00252"></a>00252                         uint32              <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aae33a03430d704feba01f67f6e6f478d" title="(Windows only) Returns the maximum I/O buffer size">max_io_size</a>;
<a name="l00253"></a>00253 <span class="preprocessor">                        #endif//WIN32</span>
<a name="l00254"></a>00254 <span class="preprocessor"></span><span class="preprocessor">                        #else//TCAT_DICE_AVC</span>
<a name="l00255"></a>00255 <span class="preprocessor"></span>                        <span class="keyword">struct</span>
<a name="l00256"></a>00256                         {
<a name="l00257"></a>00257                             uint32 devices;
<a name="l00258"></a>00258                         } config;
<a name="l00259"></a>00259 <span class="preprocessor">                        #endif//TCAT_DICE_AVC</span>
<a name="l00260"></a>00260 <span class="preprocessor"></span>                    } m_cache[2];
<a name="l00261"></a>00261                     reference&lt;system_impl&gt;  m_system;
<a name="l00262"></a>00262 <span class="keyword">private</span>:    
<a name="l00263"></a>00263                     handle              m_hBus;                                                                                         
<a name="l00264"></a>00264                     <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#afa72ebc2b0cd6d772a810a1c2596eace" title="(WDM:) bus ID">ID</a>                  m_id;                                                                                           
<a name="l00265"></a>00265 <span class="preprocessor">                    #ifdef WIN32</span>
<a name="l00266"></a>00266 <span class="preprocessor"></span>    <span class="keyword">static</span>          uint32  __stdcall   static_thread_notification  (<span class="keywordtype">void</span>* lpParameter);                                                
<a name="l00267"></a>00267     <span class="keyword">volatile</span>        <span class="keywordtype">bool</span>                m_thread_notification_running;                                                                  
<a name="l00268"></a>00268                     handle              m_hEvents[kBusNotifications];                                                                   
<a name="l00269"></a>00269                     handle              m_hThread;                                                                                      
<a name="l00270"></a>00270                     handle              m_hReady;                                                                                       
<a name="l00271"></a>00271 <span class="preprocessor">                    #endif//WIN32</span>
<a name="l00272"></a>00272 <span class="preprocessor"></span><span class="preprocessor">                    #ifdef __MACH__</span>
<a name="l00273"></a>00273 <span class="preprocessor"></span>                    uint16              m_NotificationRefConIndex;                                                                          
<a name="l00274"></a>00274 <span class="comment">//                  #ifndef TCAT_DICE_AVC</span>
<a name="l00275"></a>00275                     <span class="keywordtype">bool</span>                m_ready;                                                                                        
<a name="l00276"></a>00276                     pthread_cond_t      m_ready_cond;                                                                                   
<a name="l00277"></a>00277                     pthread_mutex_t     m_ready_mutex;                                                                                  
<a name="l00278"></a>00278 <span class="comment">//                  #endif//TCAT_DICE_AVC</span>
<a name="l00279"></a>00279 <span class="keyword">public</span>:
<a name="l00280"></a>00280                     <span class="keywordtype">bool</span>                m_update;                                                                                       
<a name="l00281"></a>00281                     <span class="keywordtype">bool</span>                m_update_devicelist;                                                                            
<a name="l00282"></a>00282 <span class="preprocessor">                    #endif//__MACH__</span>
<a name="l00283"></a>00283 <span class="preprocessor"></span><span class="comment">//\endcond</span>
<a name="l00284"></a>00284 };
<a name="l00285"></a>00285 
<a name="l00286"></a>00286 
<a name="l00287"></a>00287 
<a name="l00288"></a>00288 <span class="keyword">template</span> &lt;<span class="keyword">class</span> bus_t&gt; <span class="keyword">class </span>system; 
<a name="l00290"></a>00290 <span class="comment">//</span>
<a name="l00291"></a>00291 <span class="comment">//  tcat::dice::bus</span>
<a name="l00292"></a>00292 <span class="comment">//</span>
<a name="l00297"></a><a class="code" href="classtcat_1_1dice_1_1bus.html">00297</a> <span class="comment"></span><span class="keyword">template</span>&lt;<span class="keyword">class</span> device_t&gt; <span class="keyword">class </span><a class="code" href="classtcat_1_1dice_1_1bus.html">bus</a>: <span class="keyword">public</span> bus_impl, <span class="keyword">public</span> std::deque&lt;reference&lt;device_t&gt; &gt;
<a name="l00298"></a>00298 {
<a name="l00299"></a>00299     <span class="keyword">typedef</span> <span class="keyword">typename</span> <a class="code" href="classtcat_1_1dice_1_1reference.html">dice::reference&lt;device_t&gt;</a>  <a class="code" href="classtcat_1_1dice_1_1reference.html">device_ref</a>;
<a name="l00300"></a>00300     <span class="keyword">typedef</span> <span class="keyword">typename</span> std::deque&lt;device_ref&gt;     <a class="code" href="classtcat_1_1dice_1_1base.html">super</a>;
<a name="l00301"></a>00301     
<a name="l00302"></a>00302 <span class="keyword">public</span>:
<a name="l00303"></a><a class="code" href="classtcat_1_1dice_1_1bus.html#ac70fa1df7e1f4c1ee339b831172ab402">00303</a>     <span class="keyword">typedef</span> <span class="keyword">typename</span> super::iterator            <a class="code" href="classtcat_1_1dice_1_1bus.html#ac70fa1df7e1f4c1ee339b831172ab402" title="device object iterator">iterator</a>;                                                               
<a name="l00304"></a><a class="code" href="classtcat_1_1dice_1_1bus.html#ab549a1b0102d30cfe988e6dfe89513e4">00304</a>     <span class="keyword">typedef</span> <span class="keyword">typename</span> super::const_iterator      <a class="code" href="classtcat_1_1dice_1_1bus.html#ab549a1b0102d30cfe988e6dfe89513e4" title="device object const iterator">const_iterator</a>;                                                         
<a name="l00305"></a>00305 
<a name="l00306"></a>00306     <a class="code" href="classtcat_1_1dice_1_1bus.html">bus</a>():
<a name="l00307"></a>00307         m_mount( false )
<a name="l00308"></a>00308     {
<a name="l00309"></a>00309         TDL_ENTRY( kTDLFlag_Info | kTDLFlag_PAL, <span class="stringliteral">&quot;PAL [bus 0x%x] bus()&quot;</span>, <span class="keyword">this</span>, 0, 0, 0 );
<a name="l00310"></a>00310         <span class="comment">// empty</span>
<a name="l00311"></a>00311     }
<a name="l00312"></a>00312 
<a name="l00313"></a>00313     <span class="keyword">virtual</span>                     ~<a class="code" href="classtcat_1_1dice_1_1bus.html">bus</a>()                                                                                  
<a name="l00314"></a>00314     {
<a name="l00315"></a>00315         TDL_ENTRY( kTDLFlag_Info | kTDLFlag_PAL, <span class="stringliteral">&quot;PAL [bus 0x%x] ~bus()&quot;</span>, <span class="keyword">this</span>, 0, 0, 0 );
<a name="l00316"></a>00316         <span class="keywordflow">if</span> (this-&gt;m_mount)
<a name="l00317"></a>00317         {
<a name="l00318"></a>00318             TDL_ENTRY( kTDLFlag_Error | kTDLFlag_PAL, <span class="stringliteral">&quot;PAL [bus 0x%x] unmount() should have been called before ~bus()&quot;</span>, <span class="keyword">this</span>, 0, 0, 0 );
<a name="l00319"></a>00319             PAL_DEBUG_BREAK     <span class="comment">// the virtual method unmount() should have been called before trying to destroy the object</span>
<a name="l00320"></a>00320             this-&gt;m_mount = this-&gt;m_mount;
<a name="l00321"></a>00321         }
<a name="l00322"></a>00322     }
<a name="l00323"></a><a class="code" href="classtcat_1_1dice_1_1bus.html#a22306b7c042059762041937c3e97c808">00323</a>     <span class="keyword">virtual</span> <span class="keyword">inline</span>  <span class="keywordtype">void</span>        <a class="code" href="classtcat_1_1dice_1_1bus.html#a22306b7c042059762041937c3e97c808" title="Notifies about the readily created bus (first device arrival).">mount</a>()                                                                                 
<a name="l00324"></a>00324     {
<a name="l00325"></a>00325         TDL_ENTRY( kTDLFlag_Info | kTDLFlag_PAL, <span class="stringliteral">&quot;PAL [bus 0x%x] mount()&quot;</span>, <span class="keyword">this</span>, 0, 0, 0 );
<a name="l00326"></a>00326         <a class="code" href="classtcat_1_1dice_1_1lock.html" title="Auto lock stack class.">lock</a> <a class="code" href="classtcat_1_1dice_1_1lock.html" title="Auto lock stack class.">lock</a>(<span class="keyword">this</span>);
<a name="l00327"></a>00327         m_mount=<span class="keyword">true</span>;
<a name="l00328"></a>00328     }
<a name="l00329"></a><a class="code" href="classtcat_1_1dice_1_1bus.html#a6eb75884c9cf961dec3a0dcbdc75182e">00329</a>     <span class="keyword">virtual</span> <span class="keyword">inline</span>  <span class="keywordtype">void</span>        <a class="code" href="classtcat_1_1dice_1_1bus.html#a6eb75884c9cf961dec3a0dcbdc75182e" title="Notifies about the removal of the bus (last device removal).">unmount</a>()                                                                               
<a name="l00330"></a>00330     {
<a name="l00331"></a>00331         TDL_ENTRY( kTDLFlag_Info | kTDLFlag_PAL, <span class="stringliteral">&quot;PAL [bus 0x%x] unmount()&quot;</span>, <span class="keyword">this</span>, 0, 0, 0 );
<a name="l00332"></a>00332         <a class="code" href="classtcat_1_1dice_1_1lock.html" title="Auto lock stack class.">lock</a> <a class="code" href="classtcat_1_1dice_1_1lock.html" title="Auto lock stack class.">lock</a>(<span class="keyword">this</span>);
<a name="l00333"></a>00333         <span class="keywordflow">if</span> (m_mount)
<a name="l00334"></a>00334         {
<a name="l00335"></a>00335             m_mount = <span class="keyword">false</span>;
<a name="l00336"></a>00336             <span class="keywordflow">for</span> (<a class="code" href="classtcat_1_1dice_1_1bus.html#ac70fa1df7e1f4c1ee339b831172ab402" title="device object iterator">iterator</a> <a class="code" href="classtcat_1_1dice_1_1device.html">device</a>=super::begin(); <a class="code" href="classtcat_1_1dice_1_1device.html">device</a>!=super::end(); <a class="code" href="classtcat_1_1dice_1_1device.html">device</a>++)
<a name="l00337"></a>00337             {
<a name="l00338"></a>00338                 (*device)-&gt;unmount();
<a name="l00339"></a>00339             }
<a name="l00340"></a>00340         }
<a name="l00341"></a>00341     }
<a name="l00342"></a><a class="code" href="classtcat_1_1dice_1_1bus.html#a2c96c6dc9471255f2846dc85f458c005">00342</a>     <span class="keyword">virtual</span>         <a class="code" href="classtcat_1_1dice_1_1reference.html">device_ref</a>  <a class="code" href="classtcat_1_1dice_1_1bus.html#a2c96c6dc9471255f2846dc85f458c005" title="Finds a device on this bus by its unique ID.">find</a>        (uint64 guid64)                 <span class="keyword">const</span>                               
<a name="l00343"></a>00343     {
<a name="l00344"></a>00344         <span class="comment">// search all STL device list entries for a given GUID</span>
<a name="l00345"></a>00345 <span class="comment">//      lock lock(this);</span>
<a name="l00346"></a>00346         <span class="keywordflow">for</span> (<a class="code" href="classtcat_1_1dice_1_1bus.html#ab549a1b0102d30cfe988e6dfe89513e4" title="device object const iterator">const_iterator</a> <a class="code" href="classtcat_1_1dice_1_1device.html">device</a>=super::begin(); <a class="code" href="classtcat_1_1dice_1_1device.html">device</a>!=super::end(); <a class="code" href="classtcat_1_1dice_1_1device.html">device</a>++)
<a name="l00347"></a>00347             <span class="keywordflow">if</span> ((*device)-&gt;guid64() == guid64)
<a name="l00348"></a>00348                 <span class="keywordflow">return</span> *<a class="code" href="classtcat_1_1dice_1_1device.html">device</a>;
<a name="l00349"></a>00349         <span class="keywordflow">return</span> NULL;
<a name="l00350"></a>00350     }
<a name="l00351"></a><a class="code" href="classtcat_1_1dice_1_1bus.html#ae8551543a9ea76f34fa00bf4f8404157">00351</a>     <span class="keyword">virtual</span>         <a class="code" href="classtcat_1_1dice_1_1reference.html">device_ref</a>  <a class="code" href="classtcat_1_1dice_1_1bus.html#a2c96c6dc9471255f2846dc85f458c005" title="Finds a device on this bus by its unique ID.">find</a>        (<span class="keyword">const</span> std::string nickname)    <span class="keyword">const</span>                               
<a name="l00352"></a>00352     {
<a name="l00353"></a>00353         <span class="comment">// search all STL device list entries for a given nickname</span>
<a name="l00354"></a>00354 <span class="comment">//      lock lock(this);</span>
<a name="l00355"></a>00355         <span class="keywordflow">for</span> (<a class="code" href="classtcat_1_1dice_1_1bus.html#ab549a1b0102d30cfe988e6dfe89513e4" title="device object const iterator">const_iterator</a> <a class="code" href="classtcat_1_1dice_1_1device.html">device</a>=super::begin(); <a class="code" href="classtcat_1_1dice_1_1device.html">device</a>!=super::end(); <a class="code" href="classtcat_1_1dice_1_1device.html">device</a>++)
<a name="l00356"></a>00356             <span class="keywordflow">if</span> ((*device)-&gt;nickname()==nickname)
<a name="l00357"></a>00357                 <span class="keywordflow">return</span> *<a class="code" href="classtcat_1_1dice_1_1device.html">device</a>;
<a name="l00358"></a>00358         <span class="keywordflow">return</span> NULL;
<a name="l00359"></a>00359     }
<a name="l00360"></a><a class="code" href="classtcat_1_1dice_1_1bus.html#af65be78dacb1185696519d7dcae905c4">00360</a>     <span class="keyword">virtual</span>         <span class="keywordtype">bool</span>        <a class="code" href="classtcat_1_1dice_1_1bus.html#af65be78dacb1185696519d7dcae905c4" title="Sorts the device into the STL list.">add</a>         (<a class="code" href="structtcat_1_1dice_1_1_d_e_v_i_c_e___i_n_f_o.html">DEVICE_INFO</a>&amp; device_info)  <span class="keywordflow">throw</span>(<a class="code" href="classtcat_1_1exception_1_1base.html">tcat::exception::base</a>)
<a name="l00361"></a>00361     {
<a name="l00362"></a>00362         <a class="code" href="classtcat_1_1dice_1_1bus.html#ac70fa1df7e1f4c1ee339b831172ab402" title="device object iterator">iterator</a> device_list = super::begin();
<a name="l00363"></a>00363         <span class="keywordflow">while</span> (device_list!=super::end() &amp;&amp; (*device_list)-&gt;guid64()&lt;device_info.guid64) 
<a name="l00364"></a>00364             device_list++;
<a name="l00365"></a>00365         <span class="keywordflow">if</span> (device_list==super::end() || (*device_list)-&gt;guid64()!=device_info.guid64)
<a name="l00366"></a>00366         {
<a name="l00367"></a>00367             <span class="comment">// the guid of the container device is higher than the guid of the device to check:</span>
<a name="l00368"></a>00368             <span class="comment">// create new device and insert it before this container device</span>
<a name="l00369"></a>00369             <a class="code" href="classtcat_1_1dice_1_1reference.html">device_ref</a> <a class="code" href="classtcat_1_1dice_1_1device.html">device</a>(<a class="code" href="classtcat_1_1dice_1_1bus.html#a47f28788f85aecb9b03bce0db22ab9f2" title="Override this to instantiate a derived device.">new_device</a> (device_info.guid64),<span class="keyword">this</span>);
<a name="l00370"></a>00370             <span class="keywordflow">if</span> (device)
<a name="l00371"></a>00371             {
<a name="l00372"></a>00372                 device-&gt;create (<span class="keyword">this</span>, device_info); 
<a name="l00373"></a>00373                 device-&gt;fetch (device_info, kDeviceNotificationAll);
<a name="l00374"></a>00374                 this-&gt;insert (device_list, device);
<a name="l00375"></a>00375                 device-&gt;mount();
<a name="l00376"></a>00376                 <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00377"></a>00377             }
<a name="l00378"></a>00378         }
<a name="l00379"></a>00379         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00380"></a>00380     }
<a name="l00381"></a><a class="code" href="classtcat_1_1dice_1_1bus.html#a47c05a4f6599744968e3e3ab5b31d214">00381</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>        <a class="code" href="classtcat_1_1dice_1_1bus.html#a47c05a4f6599744968e3e3ab5b31d214" title="fetch device properties of the list of devices">fetch_devices</a>()                         throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::base)            
<a name="l00382"></a>00382     {
<a name="l00383"></a>00383 <span class="preprocessor">        #ifndef TCAT_DICE_AVC</span>
<a name="l00384"></a>00384 <span class="preprocessor"></span>        <a class="code" href="structtcat_1_1dice_1_1_d_e_v_i_c_e___n_o_t_i_f_i_c_a_t_i_o_n_s.html">DEVICE_NOTIFICATIONS</a> notifications = <a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa8b2476e548cfd9691a9028c811ef8f2" title="Obtains the notification flags for all devices.">device_notifications</a>();
<a name="l00385"></a>00385         <a class="code" href="classtcat_1_1dice_1_1lock.html" title="Auto lock stack class.">lock</a> <a class="code" href="classtcat_1_1dice_1_1lock.html" title="Auto lock stack class.">lock</a>(<span class="keyword">this</span>);
<a name="l00386"></a>00386         <span class="comment">// the device_info will always be filled from the beginning of the array -</span>
<a name="l00387"></a>00387         <span class="comment">// anyway the device_info.index will point into the driver structure of the</span>
<a name="l00388"></a>00388         <span class="comment">// device array and therefor might not reflect the event_info index.</span>
<a name="l00389"></a>00389         <span class="keywordflow">for</span> (uint32 idx=0; idx&lt;m_cache[0].config.devices; idx++)
<a name="l00390"></a>00390         {
<a name="l00391"></a>00391             <a class="code" href="structtcat_1_1dice_1_1_d_e_v_i_c_e___i_n_f_o.html">DEVICE_INFO</a>&amp; device_info = m_cache[0].config.device_info[idx];
<a name="l00392"></a>00392             <span class="keywordflow">if</span> (<a class="code" href="classtcat_1_1dice_1_1reference.html">device_ref</a> <a class="code" href="classtcat_1_1dice_1_1device.html">device</a>=<a class="code" href="classtcat_1_1dice_1_1bus.html#a2c96c6dc9471255f2846dc85f458c005" title="Finds a device on this bus by its unique ID.">find</a>(device_info.<a class="code" href="structtcat_1_1dice_1_1_d_e_v_i_c_e___i_n_f_o.html#af5c6037015ca393c7ec956f1d88df7dd" title="WWUID from Config ROM Bus Info Block.">guid64</a>))
<a name="l00393"></a>00393                 <a class="code" href="classtcat_1_1dice_1_1device.html">device</a>-&gt;fetch(device_info, notifications.<a class="code" href="structtcat_1_1dice_1_1_d_e_v_i_c_e___n_o_t_i_f_i_c_a_t_i_o_n_s.html#a77607ecbea94e0a59a6c4ebc1a7584ed" title="notification source definitions for kBusNotificationDeviceNotification">notification</a>[device_info.<a class="code" href="structtcat_1_1dice_1_1_d_e_v_i_c_e___i_n_f_o.html#ab93fcb8b71005bb4e1193e25d85e4d04" title="Index referring to a particular device;.">idx</a>]);
<a name="l00394"></a>00394         }
<a name="l00395"></a>00395 <span class="preprocessor">        #endif//TCAT_DICE_AVC</span>
<a name="l00396"></a>00396 <span class="preprocessor"></span>    }
<a name="l00397"></a><a class="code" href="classtcat_1_1dice_1_1bus.html#a09f15fa12d57d1f3b06a38d6b20c51b3">00397</a>     <span class="keyword">virtual</span>         <span class="keywordtype">bool</span>        <a class="code" href="classtcat_1_1dice_1_1bus.html#a09f15fa12d57d1f3b06a38d6b20c51b3" title="Checks for device arrival/removal and updates the internal STL list.">fetch_devicelist</a>()                      throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::base)            
<a name="l00398"></a>00398     {
<a name="l00399"></a>00399         <a class="code" href="classtcat_1_1dice_1_1lock.html" title="Auto lock stack class.">lock</a> <a class="code" href="classtcat_1_1dice_1_1lock.html" title="Auto lock stack class.">lock</a>(<span class="keyword">this</span>);
<a name="l00400"></a>00400         <span class="comment">// remove not existing devices</span>
<a name="l00401"></a>00401         <span class="keywordflow">for</span> (<a class="code" href="classtcat_1_1dice_1_1bus.html#ac70fa1df7e1f4c1ee339b831172ab402" title="device object iterator">iterator</a> i=super::begin(); i!=super::end();)
<a name="l00402"></a>00402         {
<a name="l00403"></a>00403             <span class="comment">// check if this STL bus list entry is an existing bus interface</span>
<a name="l00404"></a>00404             <span class="keywordflow">if</span> (<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#a34c037cfb9537165ae579972618a864c" title="Return true if the guid is a connected DICE(tm) device.">available</a>((*i)-&gt;guid64()))
<a name="l00405"></a>00405                 i++;
<a name="l00406"></a>00406             <span class="keywordflow">else</span>
<a name="l00407"></a>00407             {
<a name="l00408"></a>00408                 (*i)-&gt;unmount();
<a name="l00409"></a>00409                 i = this-&gt;erase(i);
<a name="l00410"></a>00410             }
<a name="l00411"></a>00411         }
<a name="l00412"></a>00412         <span class="keywordflow">return</span> <a class="code" href="classtcat_1_1dice_1_1bus.html#a09f15fa12d57d1f3b06a38d6b20c51b3" title="Checks for device arrival/removal and updates the internal STL list.">bus_impl::fetch_devicelist</a>();
<a name="l00413"></a>00413     }
<a name="l00414"></a><a class="code" href="classtcat_1_1dice_1_1bus.html#a9c0bc84ba9404790c9156cd526ba3302">00414</a>     <span class="keyword">virtual</span>         <span class="keywordtype">void</span>        <a class="code" href="classtcat_1_1dice_1_1bus.html#a9c0bc84ba9404790c9156cd526ba3302" title="Sends device notifications to the list of devices.">update_devices</a>()                        throw(tcat::<a class="code" href="classtcat_1_1dice_1_1bus__impl.html#aa3df45bdad2a1938c7f97774bed15cd7" title="Exception occurred at subscribed item.">exception</a>::base)                    
<a name="l00415"></a>00415     {
<a name="l00416"></a>00416         <a class="code" href="classtcat_1_1dice_1_1lock.html" title="Auto lock stack class.">lock</a> <a class="code" href="classtcat_1_1dice_1_1lock.html" title="Auto lock stack class.">lock</a>(<span class="keyword">this</span>);
<a name="l00417"></a>00417         <span class="keywordflow">for</span> (<a class="code" href="classtcat_1_1dice_1_1bus.html#ac70fa1df7e1f4c1ee339b831172ab402" title="device object iterator">iterator</a> <a class="code" href="classtcat_1_1dice_1_1device.html">device</a>=super::begin(); <a class="code" href="classtcat_1_1dice_1_1device.html">device</a>!=super::end(); <a class="code" href="classtcat_1_1dice_1_1device.html">device</a>++)
<a name="l00418"></a>00418             (*device)-&gt;update();    <span class="comment">// notify subscriber</span>
<a name="l00419"></a>00419     }
<a name="l00420"></a>00420 <span class="keyword">protected</span>:
<a name="l00421"></a><a class="code" href="classtcat_1_1dice_1_1bus.html#a47f28788f85aecb9b03bce0db22ab9f2">00421</a>     <span class="keyword">virtual</span>         device_t*   <a class="code" href="classtcat_1_1dice_1_1bus.html#a47f28788f85aecb9b03bce0db22ab9f2" title="Override this to instantiate a derived device.">new_device</a>  (uint64 guid64)<span class="keyword">                 const   </span>{ <span class="keywordflow">return</span> <span class="keyword">new</span> device_t(); }          
<a name="l00422"></a>00422 <span class="keyword">private</span>:
<a name="l00423"></a>00423                     <span class="keywordtype">bool</span>        m_mount;
<a name="l00424"></a>00424 };
<a name="l00425"></a>00425 <span class="keyword">typedef</span> <a class="code" href="classtcat_1_1dice_1_1reference.html" title="Auto reference helper class.">dice::reference&lt;bus&lt;device&gt;</a> &gt; bus_ref;  
<a name="l00426"></a>00426 
<a name="l00427"></a>00427 
<a name="l00428"></a>00428 
<a name="l00429"></a>00429 } <span class="comment">// namespace dice</span>
<a name="l00430"></a>00430 } <span class="comment">// namespace tcat</span>
<a name="l00431"></a>00431 
<a name="l00432"></a>00432 
<a name="l00433"></a>00433 <span class="preprocessor">#undef kDriverLog_File_ID</span>
</pre></div></div>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
	<head>
		<title>Platform Abstraction Layer API Documentation</title>
		<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
		<link href="doxygen.css" rel="stylesheet" type="text/css">
	</head>
	<body>
		<hr size="1">
		<table width="100%" border="0" cellspacing="0" cellpadding="0">
			<tr>
				<td><small><font face="Verdana, Arial, Helvetica, sans-serif">(C) COPYRIGHT 2007-2013 TC Applied Technologies, Ltd. (ALL RIGHTS RESERVED)</font></small></td>
				<td colspan="2" align="right"><font face="Verdana, Arial, Helvetica, sans-serif">Compiled on 14 Jun 2013</font></td>
			</tr>
		</table>
	</body>
</html>
