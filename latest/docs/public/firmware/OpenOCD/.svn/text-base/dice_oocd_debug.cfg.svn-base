# dice_oocd.cfg
# invoke on the openocd.exe command-line after the interface configuration file

# configures the Dice CPU target for debugging


# specify the ports to use for gdb and telnet sessions
gdb_port 3333
telnet_port 4444

# set up variables
if { [info exists CHIPNAME] } {	
   set  _CHIPNAME $CHIPNAME    
} else {	 
   set  _CHIPNAME tcat-dice
}

if { [info exists ENDIAN] } {	
   set  _ENDIAN $ENDIAN    
} else {	 
   set  _ENDIAN little
}

if { [info exists CPUTAPID ] } {
   set _CPUTAPID $CPUTAPID
} else {
  # force an error till we get a good number
  set _CPUTAPID 0x1f0f0f0f

}

# set up maximum JTAG clock rate.
# if programming doesnt work (e.g. target doesnt stay in RESET) change JTAG speed
# optimal speed for high-speed interfaces, such as JTAGkey2, is 15000
#  other devices will default back to 6000
jtag_khz 15000

# use combined on interfaces or targets that can't set TRST/SRST separately
reset_config trst_and_srst srst_pulls_trst
jtag_nsrst_delay	250
jtag_ntrst_delay	250

# jtag scan chain
jtag newtap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID

#target configuration
set _TARGETNAME [format "%s.cpu" $_CHIPNAME]
target create $_TARGETNAME arm7tdmi -endian $_ENDIAN -chain-position $_TARGETNAME -variant arm7tdmi-s_r4

# set up the reset-init event handler
$_TARGETNAME configure -event reset-init { source dice_oocd_init.cfg }

# working area for fast transfers
# if your image uses over 2MB RAM, increase the physical address below
$_TARGETNAME configure -work-area-virt 0 -work-area-phys 0x00200000 -work-area-size 0x4000 -work-area-backup 0

# speed-ups, use if working area is defined
arm7_9 fast_memory_access enable
arm7_9 dcc_downloads enable

# enter normal command mode, allowing memory read/write comands
init

# set up DICE chip selects, memories, etc.
source dice_oocd_init.cfg

# program resids in RAM, enable software breakpoints
gdb_breakpoint_override soft

echo " "
echo "ready to attach gdb/telnet"
echo " "
